[package]
name = "rust-web-roguelike"
version = "0.1.0"
authors = ["Zireael07 <zi@mail.com>"]
edition = "2018"

# For WASM pack
[lib]
crate-type = ["cdylib"]

[dependencies]
# Save/load
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = { version = "0.2.71", features = ["serde-serialize"] }

wasm-bindgen-futures = "0.4.21"

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.4"
features = ["console",
  'CssStyleDeclaration',
  'CanvasRenderingContext2d',
  'Document',
  'Element',
  'Node',
  'HtmlElement',
  'HtmlCanvasElement',
  'HtmlImageElement',
  'Window',
  'DomTokenList',
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"

# ECS
hecs = "0.3.0"

# RNG
rand = { version = "0.7.3", features = ["wasm-bindgen"] }
rand_xoshiro = { version = "0.4.0" }

# Date and time
chrono = { version = "0.4", features = ["wasmbind"] }

# Data files
ron = "*"

# Parsing
nom = "6.0"
_funty = { package = "funty", version = "=1.1.0"} # https://github.com/bitvecto-rs/bitvec/issues/105